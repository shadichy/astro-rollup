import{rollup as r}from"rollup";import p from"./rollup-options.js";import e from"files-pipeline/dist/lib/deepmerge.js";import{files as a}from"files-pipeline";import f from"@rollup/plugin-terser";var h=(n={})=>{const t=e(p,n),i=new Set;if(typeof t.path<"u")if(t.path instanceof Array||t.path instanceof Set)for(const s of t.path)i.add(s);else i.add(t.path);return t.useTerser&&e(t.rollupOptions,{plugins:[f(t.terserOptions)]}),{name:"astro-rollup-js",hooks:{"astro:build:done":async()=>{for(const s of i)await(await(await(await new a(t.logger).in(s)).by("**/*.{js,mjs,cjs}")).not(t.exclude)).pipeline(e(p.pipeline,{wrote:async o=>(await(await r(e(t.rollupOptions,{input:o.inputPath}))).generate({format:t.format,exports:"named"})).output[0].code,fulfilled:async o=>o.files>0?`Successfully processed a total of ${o.files} JS ${o.files===1?"file":"files"}}.`:!1}))}}}};export{h as default};
